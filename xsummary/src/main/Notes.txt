1.startActivityForResult 替代方案
示例：
class FirstActivity : AppCompatActivity() {
    private val requestDataLauncher =
        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->
            if (result.resultCode == RESULT_OK) {
                val data = result.data?.getStringExtra("data")
                Log.d("FirstActivity", "data =${data}")
            }
        }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        val binding = FirstLayoutBinding.inflate(layoutInflater)
        setContentView(binding.root)
        val button = binding.button1
        button.setOnClickListener {
            val intent = Intent(this, SecondActivity::class.java)
            requestDataLauncher.launch(intent) //调用 launch 方法，该方法接收 输入类型 I
        }
    }
}

====================================================================
class SecondActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_second)
        val binding = ActivitySecondBinding.inflate(layoutInflater)
        setContentView(binding.root)
        val button2 = binding.button2
        button2.setOnClickListener() {
            val intent = Intent()
          	intent.putExtra("data","register")
            setResult(RESULT_OK, intent)
            finish()
        }
    }
}

使用
1.构建ActivityResultLauncher对象。
AppCompatActivity中调用
registerForActivityResult(
       @NonNull ActivityResultContract<I, O> contract,
       @NonNull ActivityResultCallback<O> callback)方法
contract：自定义或者使用内置ActivityResultContracts.StartActivityForResult()
callback：返回时回调处理

2.启动下一个SecondActivity。
ActivityResultLauncher.launch(Intent)

3.SecondActivity返回FirstActivity
val intent = Intent()
intent.putExtra("data","register")
setResult(RESULT_OK, intent)
